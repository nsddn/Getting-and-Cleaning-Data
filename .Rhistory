a<-avaiable.packages()
a<-available.packages()
head(rownames(a),3)
install.packages("slidify")
install.packages(c("slidify","ggplot2","devtools"))
library(devtools)
find.package("devtools")
find_rtools()
library(datasets)
data(mtcars)
mean(1,"virginica")
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$cyl,4,8)
library(datasets)
data(iris)
?iris
mean(1,3)
tapplr([,1:4],3,mean)
tapply([,1:4],3,mean)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],2,3,mean)
apply(iris[,1:4],3,mean)
apply(iris[,1:4],2,mean)
mean(iris[,1:4],3)
?apply
?mean
?absmean
?abs
library(datasets)
data(mtcars)
sapply(split(mtcars$mpg,mtcars$cyl,mean))
sapply(split(mtcars$mpg,mtcars$cyl),mean)
?diff
sapply(split(mtcars$cyl=4))
sapply(split(mtcars$cyl=4, mtcars$cyl=8),diff)
diif(mtcars$cyl,4,8)
diff(mtcars$cyl,4,8)
library(datasets)
data(mtcars)
hp<-with(mtcars,tapply(hp,cyl,mean))
hp
hp[3]-hp[1]
data(iris)
m<-with(iris,tapply(sepal.length,"virginica",mean))
m<-with(iris,tapply("sepal.length","virginica",mean))
m<-with(iris,mean("sepal.length","virginica"))
m<-mean("Sepal.Length","virginica")
m<-mean(1,"virginica")
m<-mean(1,3)
m
x$setmatrix(m)
makeCacheMatrix <- function(x = Matrix()) {
1:10
1:20
1:30
1:20
1
2
3
4
q
makeCacheMatrix <- function(x = Matrix()) {
setmatrix <- function(matrix) m<<- Matrix
x<<-y
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m<-x$getmatrix()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data<-x$get()
m<-matrix(data, ...)
x$setmatrix(m)
m
}
}
get <-function() x
setmean <- function(mean) m<<- mean
getmean<-function()m
list(set=set, get=get,
setmean=setmean,
getmean=getmean)
}
cachemean<-function(x, ...){
m<-x$getmean()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data<-x$get()
m<-mean(data, ...)
x$setmean(m)
m
}
q
x$setmean(m)
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("xml")
install.packages("XML")
install.packages("rJava")
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
options(java.home="C:\\Program Files\\Java\\jre1.8.0_31")
install.packages("rJava")
library(rJava)
install.packages("xlsx")
library(xlsx)
options(java.home="C:\\Program Files (x86)\\Java\\jre1.8.0_31")
install.packages("rJava")
library(rJava)
my_app<-oauth_app("twitter", key="be4770cea4875b343c3e
", secret="77ca40a9fa0159d816bc9c8968915fcfdb6e9d81")
x<-1:4
prob<-(1:4)/10
prob
rbind(x,prob)
mean(prob)
temp<-rbind(x,prob)
temp
mean(temp)
mean(prob)
mean(x)
mean(x,prob)
X=seq(1,100,5)
Y=seq(1,100,5)
Z=rnorm(length(X),10,2)
data1<-data.frame(X, Y, )
data1<-data.frame(X, Y, Z)
data1
data2<-data.frame(X, Y, Z1=Z-5)
data3<-data.frame(X, Y, Z1=Z-3)
require(scatterplot3d)
library(usingR)
install.packages('scatterplot3d')
require(scatterplot3d)
s3d<-scatterplot3d(data1, color="blue", pch=19, xlim=NULL, ylim= NULL, zlim=c(0,20))
s3d$points3d(data2, col="red", pch=18)
s3d$points3d(data3, col="green4", pch=17)
nd<-70
mn<-80
sd<-10
pnorm(nd, mn,sd)
quantile<-0.95
mean2<-1100
sd2<-75
round(qnorm(quantile, mean=mean2, sd=sd2))
n<-100
se<-sd2/sqrt(n)
round(qnorm(quantile, mean=mean2, sd=se))
p<-0.5
n<-5
quantile<-3
round(pbinom(quantile, size=n, prob=p, lower.tail=FALSE)*100)
mn=15
sd=10
n=100
se=sd/sqrt(100)
ll<-14
ul<-16
pnorm(ll, mean=mn, sd=se)*100
pnorm(ul, mean=mn, sd=se)*100
res<-(pnorm(ll, mean=mn, sd=se)*100-pnorm(ll, mean=mn, sd=se))*100
res
res<-(pnorm(ll, mean=mn, sd=se)-pnorm(ll, mean=mn, sd=se))*100
res
left<-pnorm(ll, mean=mn, sd=se)*100
right<-pnorm(ul, mean=mn, sd=se)*100
res<-right-left
res
quantile<-0.5
mn<-0.5
var<-1/12
n<-1000
se<-var/sqrt(n)
se
res<-qnorm(quantile, mean=mn, sd=se)
res
mn<-3
l<-5
quantile<-10
prob<-ppois(quantile, lambda=mn*l), digits=2)
prob<-ppois(quantile, lambda=mn*l)
prob
q()
library(swirl)
swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
pt(2.5, df=15, lower.tail=FALSE)
qnorm(.95)
swirl()
qnorm(.99)
swirl()
pnorm(2, lower.tail=TRUE)
pnorm(2, lower.tail=FALSE)
mybi
mybin
pbinom(6, 8,.5,lower.tail=false)
pbinom(6, 8,.5,lower.tail=FALSE)
pbinom(7, 8,.5,lower.tail=FALSE)
pbinom(7, size=8,prob=.5,lower.tail=FALSE)
pbinom(7, size=8,prob=.5,lower.tail=TRUE)
pbinom(9, size=8,lambda=5,lower.tail=FALSE)
pbinom(9, lambda=5,lower.tail=FALSE)
pbinom(7, size=8,prob=.5,lower.tail=TRUE)
ppois(9,5,lower.tail=FALSE)
swirl()
swirl()
swirl()
swirl()
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z<-qnorm(.95)
pnorm(30+z, mean=30, lower.tail=FALSE)
pnorm(30+z, mean=32, lower.tail=FALSE)
pnorm(30+z, mean=32, sd=1 lower.tail=FALSE)
pnorm(30+z, mean=32, sd=1, lower.tail=FALSE)
pnorm(30+z*2, mean=32, sd=2, lower.tail=FALSE)
power.t.test(n=16, delta=2/4, sd=1, type="Ã¶ne.sample", alt="one.sided")$power
power.t.test(n=16, delta=2/4, sd=1, type="one.sample", alt="one.sided")$power
power.t.test(n=16, delta=2, sd=4, type="one.sample", alt="one.sided")$power
power.t.test(n=16, delta=100, sd=200, type="one.sample", alt="one.sided")$power
power.t.test(power=.8, delta=2/4, sd=1, type="one.sample", alt="one.sided")$n
power.t.test(power=.8, delta=2, sd=4, type="one.sample", alt="one.sided")$n
power.t.test(power=.8, delta=100, sd=200, type="one.sample", alt="one.sided")$n
power.t.test(power=.8, n=26, sd=1, type="one.sample", alt="one.sided")$n
power.t.test(power=.8, n=26, sd=1, type="one.sample", alt="one.sided")$delta
power.t.test(power=.8, n=27, sd=1, type="one.sample", alt="one.sided")$delta
library(swirl)
install_from_swirl("Getting and Cleaning Data")
getwd()
setwd("C:\Users\Administrator\Documents\Getting and Cleaning Data\getdata-projectfiles-UCI HAR Dataset\UCI HAR Dataset")
setwd("C:/Users/Administrator/Documents/Getting and Cleaning Data/getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset")
source("run_Analysis.R")
rm(list=ls())
##read all the files from the data directors
files<-list.files("./", recursive=TRUE)
files
## creating objects to read the dataset
dataActivityTest<-read.table(file.path("./", "test", "Y_test.txt"), header = FALSE)
dataActivityTrain<-read.table(file.path("./", "train", "Y_train.txt"), header = FALSE)
dataSubjectTest<-read.table(file.path("./", "test", "subject_test.txt"), header = FALSE)
dataSubjectTrain<-read.table(file.path("./", "train", "subject_train.txt"), header = FALSE)
dataFeaturesTest<-read.table(file.path("./", "test", "X_test.txt"), header = FALSE)
dataFeaturesTrain<-read.table(file.path("./", "train", "X_train.txt"), header = FALSE)
##See the properties of each of the dataset created above
str(dataActivityTest)
str(dataActivityTrain)
str(dataSubjectTrain)
str(dataSubjectTest)
str(dataFeaturesTest)
str(dataFeaturesTrain)
##Merging the train and test data set to create one data set
dataSubject<-rbind(dataSubjectTrain,dataSubjectTest)
dataActivity<-rbind(dataActivityTrain,dataActivityTest)
dataFeatures<-rbind(dataFeaturesTrain,dataFeaturesTest)
##setting names to variables
names(dataSubject)<-c("Subject")
names(dataActivity)<-c("Activity")
dataFeaturesNames<-read.table(file.path("./", "features.txt"), head=FALSE)
names(dataFeatures)<-dataFeaturesNames$V2
##Merge columns to get the data frame Data for all the data
dataCombine<-cbind(dataSubject, dataActivity)
Data<-cbind(dataFeatures, dataCombine)
##Extract data for only the measurements on the mean and standard deviation for each measurement
subDataFeaturesNames<-dataFeaturesNames$V2[grep("mean\\(\\)|std\\(\\)", dataFeaturesNames$V2)]
##subset the data frame Data by selected names by Features
selectedNames<-c(as.character(subDataFeaturesNames), "Subject", "Activity")
Data<-subset(Data, select=selectedNames)
##the sturcture of the data frame Data is
str(Data)
##Read descriptive activity names from "activity_labels.txt"
activitylabels<-read.table(file.path("./", "activity_labels.txt"), header=FALSE)
head(Data$Activity, 30)
names(Data)<-gsub("^t","time", names(Data))
names(Data)<-gsub("^f","frequency", names(Data))
names(Data)<-gsub("Acc","Accelerometer", names(Data))
names(Data)<-gsub("Gyro","Gyroscope", names(Data))
names(Data)<-gsub("Mag","Magitude", names(Data))
names(Data)<-gsub("Mag","Magnitude", names(Data))
names(Data)<-gsub("BodyBody","Body", names(Data))
names(Data)
library(plyr)
Data2<-aggregate(.~ Subject + Activity, Data, mean)
Data2<-Data2[order(Data2$Subject, Data2$Activity), ]
write.table(Data2, file="tidydata.txt", row.name=FALSE)
library(knitr)
knit2htmml("codebook.Rmd")
rm(list=ls())
##read all the files from the data directors
files<-list.files("./", recursive=TRUE)
files
## creating objects to read the dataset
dataActivityTest<-read.table(file.path("./", "test", "Y_test.txt"), header = FALSE)
dataActivityTrain<-read.table(file.path("./", "train", "Y_train.txt"), header = FALSE)
dataSubjectTest<-read.table(file.path("./", "test", "subject_test.txt"), header = FALSE)
dataSubjectTrain<-read.table(file.path("./", "train", "subject_train.txt"), header = FALSE)
dataFeaturesTest<-read.table(file.path("./", "test", "X_test.txt"), header = FALSE)
dataFeaturesTrain<-read.table(file.path("./", "train", "X_train.txt"), header = FALSE)
##See the properties of each of the dataset created above
str(dataActivityTest)
str(dataActivityTrain)
str(dataSubjectTrain)
str(dataSubjectTest)
str(dataFeaturesTest)
str(dataFeaturesTrain)
##Merging the train and test data set to create one data set
dataSubject<-rbind(dataSubjectTrain,dataSubjectTest)
dataActivity<-rbind(dataActivityTrain,dataActivityTest)
dataFeatures<-rbind(dataFeaturesTrain,dataFeaturesTest)
##setting names to variables
names(dataSubject)<-c("Subject")
names(dataActivity)<-c("Activity")
dataFeaturesNames<-read.table(file.path("./", "features.txt"), head=FALSE)
names(dataFeatures)<-dataFeaturesNames$V2
##Merge columns to get the data frame Data for all the data
dataCombine<-cbind(dataSubject, dataActivity)
Data<-cbind(dataFeatures, dataCombine)
##Extract data for only the measurements on the mean and standard deviation for each measurement
subDataFeaturesNames<-dataFeaturesNames$V2[grep("mean\\(\\)|std\\(\\)", dataFeaturesNames$V2)]
##subset the data frame Data by selected names by Features
selectedNames<-c(as.character(subDataFeaturesNames), "Subject", "Activity")
Data<-subset(Data, select=selectedNames)
##the sturcture of the data frame Data is
str(Data)
##Read descriptive activity names from "activity_labels.txt"
activitylabels<-read.table(file.path("./", "activity_labels.txt"), header=FALSE)
head(Data$Activity, 30)
names(Data)<-gsub("^t","time", names(Data))
names(Data)<-gsub("^f","frequency", names(Data))
names(Data)<-gsub("Acc","Accelerometer", names(Data))
names(Data)<-gsub("Gyro","Gyroscope", names(Data))
names(Data)<-gsub("Mag","Magitude", names(Data))
names(Data)<-gsub("Mag","Magnitude", names(Data))
names(Data)<-gsub("BodyBody","Body", names(Data))
names(Data)
library(plyr)
Data2<-aggregate(.~ Subject + Activity, Data, mean)
Data2<-Data2[order(Data2$Subject, Data2$Activity), ]
write.table(Data2, file="tidydata.txt", row.name=FALSE)
library(knitr)
knit2html("codebook.Rmd")
